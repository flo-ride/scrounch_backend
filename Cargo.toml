[package]
name = "scrounch_backend"
version = "0.1.0"
edition = "2024"

[workspace]
members = [".", "migration", "entity", "service", "extractor", "api", "proc"]

[workspace.dependencies]
# Rest API
axum =  "0.7.6"
axum-extra = "0.9.6"
tower = "0.5.1"
http-body-util =  "0.1.0"

# Runtime
tokio = "1.44.2"
tokio-util =  "0.7.12"
futures = "0.3.30"
async-std =  "1"

# Database
sea-orm = "1.0.1"
sea-orm-migration = "1.0.1"

# CLI + Env + Config
clap = "4.5.17"
dotenvy = "0.15.7"

# Trace + Log
tower-http = "0.5.2"
tracing =  "0.1.41"
tracing-subscriber = "0.3.18"
log = "0.4.22"

# OpenAPI
utoipa = "5.2.0"
utoipa-axum = "0.1.2"
utoipa-swagger-ui =  "8.0.3"

# Auth + OIDC
axum-oidc = "0.5.0"
tower-sessions = "0.13.0"

# Serialisation + Deserialisation 
serde = "1.0.210"
serde_json =  "1.0.114"
serde_with = "3.11.0"

# Cache (Redis/Valkey)
fred =  "9.2.1"
tower-sessions-redis-store = "0.14.0"

# S3 / Minio
aws-sdk-s3 = { version = "1.82.0", default-features = false, features = ["default-https-client", "rt-tokio", "sigv4a", "behavior-version-latest"] }
aws-config = { version = "1.6.1",  features = ["behavior-version-latest"]  }

# HTTP Client
reqwest =  { version = "0.12.7", default-features = false }

# Utils
uuid = "1.10.0"
chrono = "0.4.38"
url = "2.5.2"
rust_decimal = "1.36.0"
humantime = "2.1.0"
strum_macros = "0.26.4"
regex = "1.10.6"
native-tls = "0.2.14"

# Procs Macro
syn =  "2.0.89"
quote = "1.0.37"
proc-macro2 = "1.0.92"
heck = "0.5.0"

# Tests
axum-test = "16.2.0"
testcontainers = "0.22.0"
testcontainers-modules = "0.10.0"
test-log = "0.2.17"

[features]
default = ["cache"]

native-tls = [
    "sea-orm/runtime-tokio-native-tls", 
    "fred?/enable-native-tls", 
    "tower-sessions-redis-store?/enable-native-tls",
    "reqwest/native-tls",
    "dep:native-tls",
    "service/native-tls",
    "migration/native-tls",
    "entity/native-tls",
    "api/native-tls"
]
rustls-tls = [
    "sea-orm/runtime-tokio-rustls", 
    "fred?/enable-rustls", 
    "tower-sessions-redis-store?/enable-rustls",
    "reqwest/rustls-tls",
    "aws-sdk-s3/rustls",
    "aws-config/rustls",
    "service/rustls-tls",
    "migration/rustls-tls",
    "entity/rustls-tls",
    "api/rustls-tls"
]
vendored = ["native-tls?/vendored"]

cache = ["dep:fred", "dep:tower-sessions-redis-store", "service/cache"]


[dependencies]
# Internal
migration = { path = "migration" }
entity = { path = "entity" }
service = { path = "service" }
extractor = { path = "extractor" }
api = { path = "api" }

## Rest API
axum = { workspace = true, features = ["multipart"] }
tower = { workspace = true }

# Runtime
tokio = { workspace = true, features = ["full"] }
tokio-util = { workspace = true, features = ["io"] }
futures = { workspace = true }

# Database
sea-orm = { workspace = true, features = ["sqlx-postgres", "with-chrono", "runtime-tokio"] }

# CLI + Env + Config
clap = { workspace = true, features = ["derive", "env"] }
dotenvy = { workspace = true, features = ["clap"] }

# Trace + Log
tower-http = { workspace = true, features = ["trace", "cors"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
log = { workspace = true }

# OpenAPI
utoipa = { workspace = true, features = ["axum_extras", "uuid", "chrono", "time", "decimal", "non_strict_integers"] }
utoipa-axum = { workspace = true }
utoipa-swagger-ui = { workspace = true, features = ["axum"] }

# Auth + OIDC
axum-oidc = { workspace = true }
tower-sessions = { workspace = true }

# Serialisation + Deserialisation 
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_with = { workspace = true, features = ["macros"] }

# Cache (Redis/Valkey)
fred = { workspace = true, optional = true, features = ["partial-tracing", "serde-json"] }
tower-sessions-redis-store = { workspace = true, optional = true }

# S3 / Minio
aws-sdk-s3 = { workspace = true }
aws-config = { workspace = true }

# HTTP Client
reqwest = { workspace = true, features = ["charset", "http2", "macos-system-configuration", "json", "cookies"] }

# Utils
uuid = { workspace = true, features = ["v4", "fast-rng", "serde"] }
chrono = { workspace = true }
url = { workspace = true }
rust_decimal = { workspace = true }
humantime = { workspace = true }
native-tls = { workspace = true, optional = true }

[dev-dependencies]
http-body-util = { workspace = true }
testcontainers = { workspace = true }
testcontainers-modules = { workspace = true, features = ["postgres", "minio", "redis"] }
regex = { workspace = true }
axum-test = { workspace = true }
test-log = { workspace = true }

# Git hooks
[dev-dependencies.cargo-husky]
version = "1.5.0"
default-features = false
features = ["precommit-hook", "run-cargo-check", "run-cargo-clippy", "run-cargo-fmt"]

# Enable high optimizations for dependencies:
[profile.dev.package."*"]
opt-level = 3

