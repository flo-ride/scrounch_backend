//! Defines the `Product` entity, representing a product in the database schema.
//!
//! This entity is managed by SeaORM and includes fields that correspond to
//! columns in the `product` table.
//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15.

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

/// Represents a product in the database schema.
///
/// This struct is managed by SeaORM and includes fields that correspond to
/// columns in the `product` table. It includes various attributes that describe
/// the product, such as its identifier, image, name, price, maximum quantity
/// allowed per order, disabled status, creation time, and an optional SMA code.
#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    /// Unique identifier for the product.
    /// This field serves as the primary key and is not auto-incremented.
    pub id: Uuid,

    /// Optional image URL for the product.
    /// This field stores a string representing the product's image location.
    pub image: Option<String>,

    /// Name of the product.
    /// This field is a required string representing the product's name.
    pub name: String,

    /// Price of the product.
    /// This field stores the product's price as a decimal value.
    pub price: Decimal,

    /// Maximum quantity of the product allowed per order.
    /// This field is optional and stores the maximum quantity as a signed 16-bit integer.
    pub max_quantity_per_command: Option<i16>,

    /// Flag indicating if the product is disabled.
    /// This field is a boolean that signifies whether the product is available for purchase.
    pub disabled: bool,

    /// Timestamp of when the product was created.
    /// This field stores the creation time of the product with timezone information.
    pub creation_time: DateTimeWithTimeZone,

    #[sea_orm(unique)]
    /// Optional SMA code for the product.
    /// This field is a unique identifier associated with the product from the SMA system.
    pub sma_code: Option<String>,
}

/// Enum representing the relations of the `Product` entity.
///
/// Currently, there are no defined relations for the `Product` entity,
/// but this enum can be expanded in the future if needed.
#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
