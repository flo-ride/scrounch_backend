[package]
name = "api"
version = "0.1.0"
edition = "2024"

[dependencies]
# Internal
entity = { path = "../entity" }
service = { path = "../service" }
extractor = { path = "../extractor" }

## Rest API
axum = { workspace = true, features = ["multipart"] }
axum-extra = { workspace = true, features = ["query"] }

# Trace + Log
log = { workspace = true }

# Database
sea-orm = { workspace = true, features = ["sqlx-postgres", "runtime-tokio-rustls", "with-chrono"] }

# Runtime
tokio = { workspace = true, features = ["full"] }
tokio-util = { workspace = true, features = ["io"] }
futures = { workspace = true }

# OpenAPI
utoipa = { workspace = true, features = ["axum_extras", "uuid", "chrono", "time", "decimal", "non_strict_integers"] }
utoipa-axum = { workspace = true }
utoipa-swagger-ui = { workspace = true, features = ["axum"] }

# Auth + OIDC
axum-oidc = { workspace = true }

# Serialisation + Deserialisation 
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_with = { workspace = true, features = ["macros"] }

# S3 / Minio
rust-s3 = { workspace = true }

# HTTP Client
reqwest = { workspace = true, features = ["json", "cookies"] }

# Utils
uuid = { workspace = true, features = ["v4", "fast-rng", "serde"] }
chrono = { workspace = true }
url = { workspace = true }
rust_decimal = { workspace = true }
